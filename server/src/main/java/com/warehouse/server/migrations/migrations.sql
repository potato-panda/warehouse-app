CREATE TABLE authorities
(
    authority VARCHAR(255) NOT NULL,
    CONSTRAINT pk_authorities PRIMARY KEY (authority)
);

CREATE TABLE companies
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name            VARCHAR(255)                            NOT NULL,
    address         VARCHAR(255)                            NOT NULL,
    billing_address VARCHAR(255)                            NOT NULL,
    website         VARCHAR(255)                            NOT NULL,
    tin             VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_companies PRIMARY KEY (id)
);

CREATE TABLE contacts
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    company_id BIGINT,
    name       VARCHAR(255)                            NOT NULL,
    phone      VARCHAR(255)                            NOT NULL,
    email      VARCHAR(255),
    CONSTRAINT pk_contacts PRIMARY KEY (id)
);

CREATE TABLE inventories
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id BIGINT,
    address    VARCHAR(255),
    quantity   INTEGER                                 NOT NULL,
    CONSTRAINT pk_inventories PRIMARY KEY (id)
);

CREATE TABLE products
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    sku         VARCHAR(255)                            NOT NULL,
    item_code   VARCHAR(255)                            NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255)                            NOT NULL,
    price       DOUBLE PRECISION                        NOT NULL,
    um          VARCHAR(255)                            NOT NULL,
    um_amount   VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_products PRIMARY KEY (id)
);

CREATE TABLE purchase_orders
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    reference_no VARCHAR(255),
    company_id   BIGINT,
    prepared_by  VARCHAR(255),
    checked_by   VARCHAR(255),
    approved_by  VARCHAR(255),
    received_by  VARCHAR(255),
    total_price  DOUBLE PRECISION,
    CONSTRAINT pk_purchase_orders PRIMARY KEY (id)
);

CREATE TABLE quotations
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    company_id       BIGINT,
    payment_terms    VARCHAR(255)                            NOT NULL,
    shipping_address VARCHAR(255)                            NOT NULL,
    quotation_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    quotation_id     BIGINT,
    total_amount     DOUBLE PRECISION,
    CONSTRAINT pk_quotations PRIMARY KEY (id)
);

CREATE TABLE quote_item
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quotation_id      BIGINT                                  NOT NULL,
    purchase_order_id BIGINT                                  NOT NULL,
    quoted_product_id BIGINT,
    quantity          INTEGER,
    discount_amount   DOUBLE PRECISION                        NOT NULL,
    total_amount      DOUBLE PRECISION                        NOT NULL,
    CONSTRAINT pk_quote_item PRIMARY KEY (id)
);

CREATE TABLE receipts
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quotation_id  BIGINT,
    received_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    received_by   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_receipts PRIMARY KEY (id)
);

CREATE TABLE refresh_token
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    revoked     BOOLEAN                                 NOT NULL,
    user_id     VARCHAR(255),
    token       VARCHAR(255)                            NOT NULL,
    expiry_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_refreshtoken PRIMARY KEY (id)
);

CREATE TABLE user_authorities
(
    authority VARCHAR(255) NOT NULL,
    username  VARCHAR(255) NOT NULL
);

CREATE TABLE users
(
    username   VARCHAR(255) NOT NULL,
    password   VARCHAR(255) NOT NULL,
    is_enabled BOOLEAN,
    CONSTRAINT pk_users PRIMARY KEY (username)
);

ALTER TABLE inventories
    ADD CONSTRAINT uc_inventories_product UNIQUE (product_id);

ALTER TABLE products
    ADD CONSTRAINT uc_products_item_code UNIQUE (item_code);

ALTER TABLE quotations
    ADD CONSTRAINT uc_quotations_quotation UNIQUE (quotation_id);

ALTER TABLE receipts
    ADD CONSTRAINT uc_receipts_quotation UNIQUE (quotation_id);

ALTER TABLE refresh_token
    ADD CONSTRAINT uc_refreshtoken_token UNIQUE (token);

ALTER TABLE contacts
    ADD CONSTRAINT FK_CONTACTS_ON_COMPANY FOREIGN KEY (company_id) REFERENCES companies (id);

ALTER TABLE inventories
    ADD CONSTRAINT FK_INVENTORIES_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE purchase_orders
    ADD CONSTRAINT FK_PURCHASE_ORDERS_ON_COMPANY FOREIGN KEY (company_id) REFERENCES companies (id);

ALTER TABLE quotations
    ADD CONSTRAINT FK_QUOTATIONS_ON_COMPANY FOREIGN KEY (company_id) REFERENCES companies (id);

ALTER TABLE quotations
    ADD CONSTRAINT FK_QUOTATIONS_ON_QUOTATION FOREIGN KEY (quotation_id) REFERENCES receipts (id);

ALTER TABLE quote_item
    ADD CONSTRAINT FK_QUOTE_ITEM_ON_PURCHASE_ORDER FOREIGN KEY (purchase_order_id) REFERENCES purchase_orders (id);

ALTER TABLE quote_item
    ADD CONSTRAINT FK_QUOTE_ITEM_ON_QUOTATION FOREIGN KEY (quotation_id) REFERENCES quotations (id);

ALTER TABLE quote_item
    ADD CONSTRAINT FK_QUOTE_ITEM_ON_QUOTEDPRODUCT FOREIGN KEY (quoted_product_id) REFERENCES products (id);

ALTER TABLE receipts
    ADD CONSTRAINT FK_RECEIPTS_ON_QUOTATION FOREIGN KEY (quotation_id) REFERENCES quotations (id);

ALTER TABLE refresh_token
    ADD CONSTRAINT FK_REFRESHTOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (username);

ALTER TABLE user_authorities
    ADD CONSTRAINT fk_useaut_on_authority FOREIGN KEY (authority) REFERENCES authorities (authority);

ALTER TABLE user_authorities
    ADD CONSTRAINT fk_useaut_on_user FOREIGN KEY (username) REFERENCES users (username);